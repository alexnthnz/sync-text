# =================================
# ðŸ”§ SYNC-TEXT BACKEND CONFIGURATION
# =================================

# Server Configuration
PORT=3001
NODE_ENV=development
CORS_ORIGIN=http://localhost:3000

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/sync_text_db

# JWT Configuration
JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters
JWT_EXPIRES_IN=7d
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-key-minimum-32-characters
JWT_REFRESH_EXPIRES_IN=30d

# Security Configuration
BCRYPT_ROUNDS=12
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# Redis Configuration (Required when using Docker)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=redis123
REDIS_DB=0

# =================================
# ðŸ“‹ CONFIGURATION GUIDE
# =================================

# SERVER SETTINGS
# ---------------
# PORT: The port number the server will listen on
# NODE_ENV: Application environment (development, production, test)
# CORS_ORIGIN: Frontend URL for CORS configuration

# DATABASE SETTINGS
# -----------------
# DATABASE_URL: Full PostgreSQL connection string (REQUIRED)
#   Format: postgresql://username:password@hostname:port/database_name
#   Example: postgresql://postgres:password@localhost:5432/sync_text_db

# JWT SETTINGS
# ------------
# JWT_SECRET: Secret key for signing JWT tokens (REQUIRED, min 32 chars recommended)
# JWT_EXPIRES_IN: Token expiration time (e.g., '7d', '24h', '3600s')
# JWT_REFRESH_SECRET: Secret for refresh tokens (optional, defaults to JWT_SECRET + '_refresh')
# JWT_REFRESH_EXPIRES_IN: Refresh token expiration time

# SECURITY SETTINGS
# -----------------
# BCRYPT_ROUNDS: Password hashing rounds (10-15 recommended, higher = more secure but slower)
# RATE_LIMIT_MAX: Maximum requests per window
# RATE_LIMIT_WINDOW: Rate limit window in milliseconds (default: 15 minutes)

# REDIS SETTINGS (Required when using Docker)
# --------------------------------------------
# REDIS_HOST: Redis server hostname
# REDIS_PORT: Redis server port
# REDIS_PASSWORD: Redis password (redis123 when using docker-compose)
# REDIS_DB: Redis database number (0-15)

# =================================
# ðŸ”’ SECURITY NOTES
# =================================

# 1. Generate strong JWT secrets:
#    openssl rand -base64 32

# 2. Use environment-specific values:
#    - Development: Relaxed settings for debugging
#    - Production: Strong security settings

# 3. Never commit actual secrets to version control

# 4. Use a .env file for local development
#    Copy this file to .env and update values 